<!DOCTYPE html>
<html>
<head>
    <title>Extract time stamps</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css">

    <style type="text/css">
        #drop_zone {
            color: #ccc;
            border-style: dashed;
            border-color: #ccc;
            line-height: 100px;
            text-align: center;
        }

        #drop_zone.hovered {
            background: #cce;
            color: #333;
        }

        #result {
            width: 100%;
            height: 800px;
            font-size: 14px;
        }
    </style>

</head>
<body>
<div class='container'>
    <div class='row'>
        <div class='col-md-8 col-md-offset-2'>

            <div id="drop_zone">Drop metadata.txt here</div>
            <output id="list"></output>
            <textarea id='result'></textarea>

        </div>
    </div>

</div>

<script type="text/javascript" src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
<script type="text/javascript"
        src='https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore-min.js'></script>
<script>
    function readMetadata(txt) {
        var obj = JSON.parse(txt);
        var frames = Object.keys(obj);
        var str = 'Frame\tFile\tElapsed time [ms]\n';
        var res = _.sortBy(_.compact(_.map(frames, function (k) {
            if (k == 'Summary') {
                return null;
            } else {
                return [k, obj[k]['FileName'], parseInt(obj[k]['ElapsedTime-ms'])]
            }
        })), function (r) {
            return r[2];
        });
        return ['Frame', 'File name', 'Elapsed time [ms]'].join('\t') + '\n' + (_.map(res, function (r) {
                    return r.join('\t')
                })).join('\n');
    }

    // Code from this site:
    // http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd
    function handleFileSelect(evt) {
        evt.target.className = '';
        evt.stopPropagation();
        evt.preventDefault();

        var files = evt.dataTransfer.files; // FileList object.

        // files is a FileList of File objects. List some properties.
        var output = [];
        for (var i = 0, f; f = files[i]; i++) {
            var reader = new FileReader();

            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var content = readMetadata(e.target.result);
                    document.getElementById('result').innerHTML = content;
                };
            })(f);

            // Read in the image file as a data URL.
            reader.readAsText(f);
        }
        document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
    }

    function handleDragOver(evt) {
        evt.stopPropagation();
        evt.preventDefault();
        evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
        evt.target.className = 'hovered';
    }

    // Setup the dnd listeners.
    var dropZone = document.getElementById('drop_zone');
    dropZone.addEventListener('dragover', handleDragOver, false);
    dropZone.addEventListener('dragleave', function (evt) {
        evt.target.className = '';
    }, false);
    dropZone.addEventListener('drop', handleFileSelect, false);
</script>

<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47555853-1', 'hirokai.github.io');
    ga('send', 'pageview');

</script>
</body>
</html>
